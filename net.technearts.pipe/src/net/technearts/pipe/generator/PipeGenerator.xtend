/*
 * generated by Xtext 2.18.0
 */
package net.technearts.pipe.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import net.technearts.pipe.pipe.Model

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class PipeGenerator extends AbstractGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		for (e: resource.allContents.toIterable.filter(Model)) {
			val name = resource.URI.lastSegment.subSequence(0, resource.URI.lastSegment.length - 5)
			fsa.generateFile(name + ".java", e.compile)
		}
	}
	
	def CharSequence compile(Model model)'''
	«FOR e : model.elements»
	
	«ENDFOR»
	'''
	
}
